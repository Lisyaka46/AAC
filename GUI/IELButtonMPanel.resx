<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbArrow.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>